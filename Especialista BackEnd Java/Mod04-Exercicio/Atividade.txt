Exercício 01:

1.1: Nomenclatura adequada: Usar nomes certos para as coisas no código é super importante porque facilita muito a vida da gente e de outros programadores que podem olhar o nosso código. Quando a gente dá nomes que fazem sentido para as variáveis, funções e coisas assim, fica mais fácil entender o que cada pedaço do código faz.

1.2: Resolver os problemas na causa raiz: Quando a gente só corrige um erro sem entender o motivo dele ter acontecido, pode ser que o mesmo problema apareça de novo mais pra frente. É meio como tratar os sintomas de uma doença, mas não a causa real. Se a gente descobre e resolve o problema lá na raiz, fica menos chance de ele voltar a acontecer.

1.3: Seguir a política do escoteiro: Pensando como um escoteiro, a ideia é ser organizado, deixar as coisas arrumadas e não deixar rastros bagunçados. No código, isso se traduz em usar nomes claros e significativos para variáveis, funções e classes, comentar quando necessário para explicar partes mais complexas, e manter um estilo consistente.


Exercício 02:

1.1: Imagina que você tem uma função que soma números, mas olha a quantidade de números que ela soma! Isso pode ser confuso para quem for usar o código. É como se você tivesse que lembrar a ordem certa de seis números toda vez que quisesse somar. O certo seria simplificar isso, talvez agrupando os números ou encontrando uma maneira de usar menos parâmetros.

1.2: Aqui o nome do método (oPaiTaOn) não diz nada sobre o que a função faz. Quando alguém olhar para esse código, vai ser difícil entender qual é a função desse método só pelo nome. Seria melhor escolher um nome que conte o que o método faz, algo mais claro e descritivo.

1.3: Essa função pode estar fazendo duas coisas diferentes: checar o saldo e atualizar alguma coisa. Isso pode ser confuso! É como se você tivesse uma tarefa para fazer, mas misturou duas coisas ao mesmo tempo. O ideal seria ter uma função para checar o saldo e outra função separada para fazer a atualização.
